#!/bin/bash

THERE=/var/meow-builds/home/charles

if [[ $(( `cvs diff 2> /dev/null | wc -l` <= 1 )) ]]
then
	echo "Uncommitted changes"
#	exit 1
fi

cd $THERE

rm -rf meow
rm -rf packages
mkdir packages

cvs -d :pserver:anoncvs@cvs.meowplayer.org:/home/cvs co meow

cd meow

MAJOR_VERSION=`grep MAJOR_VERSION CMakeLists.txt | head -n1 | sed 's/.* \([0-9]*\).*/\1/'`
MINOR_VERSION=`grep MINOR_VERSION CMakeLists.txt | head -n1 | sed 's/.* \([0-9]*\).*/\1/'`
PATCH_VERSION=`grep PATCH_VERSION CMakeLists.txt | head -n1 | sed 's/.* \([0-9]*\).*/\1/'`
PACKAGE_VERSION=`grep PACKAGE_VERSION CMakeLists.txt | head -n1 | sed 's/.* \([0-9]*\).*/\1/'`

version=$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION-$PACKAGE_VERSION


cd ../
rm -rf meow-$version
cp -a meow meow_$version
tar --exclude-vcs -c meow_$version | bzip2 -9 > packages/meow_$version.tar.bz2
rm -rf meow_$version
cd meow

# make windows build
(
	mkdir build-win32
	cd build-win32
	cmake .. -DEXTRALIBS=/home/charles/dev/dlls -DCMAKE_TOOLCHAIN_FILE=/home/charles/dev/Toolchain-mingw32.cmake
	make -j4

	mv meow.exe meow_$version.exe
	i686-w64-mingw32-strip meow_$version.exe
	zip -9 meow_$version.zip meow_$version.exe
	upx --ultra-brute meow-$version.exe

	mv meow_$version.exe meow_$version.zip ../../packages
) &

sudo bash releasetools/release-tools.sh 

wait

#make apt repository
dpkg-sig -m 'release@meowplayer.org' -s origin $THERE/packages/*.deb

cd $THERE/meow-apt
for i in $THERE/packages/*.deb
do
	reprepro --ask-passphrase includedeb squeeze $i
done

#make yum repository
mkdir -p $THERE/meow-yum/Fedora/19/x86_64 $THERE/meow-yum/Fedora/19/i686 
cp $THERE/packages/*_x86_64.rpm $THERE/meow-yum/Fedora/19/x86_64
cp $THERE/packages/*_i686.rpm $THERE/meow-yum/Fedora/19/i686
createrepo $THERE/meow-yum/Fedora/19/i686
createrepo $THERE/meow-yum/Fedora/19/x86_64


